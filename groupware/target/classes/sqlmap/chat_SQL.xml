<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.IChatMapper">
	
	<resultMap type="customChatMsgVO" id="customChatMsgMap">
		<id column="CHTT_MSG_NO" property="chatMsgNo"/>
		<result column="CHTT_MSG_NO" property="chatMsgNo"/>
		<result column="chatRoomNo" property="chatRoomNo"/>
		<result column="emplId" property="emplId"/>
		<result column="emplName" property="emplName"/>
		<result column="emplProfileImg" property="emplProfileImg"/>
		<result column="chatMsgType" property="chatMsgType"/>
		<result column="chatContent" property="chatContent"/>
		<result column="chatWriteDate" property="chatWriteDate"/>
		<result column="fileGroupNo" property="fileGroupNo"/>
		<result column="imgFile" property="imgFile" javaType="java.lang.String" jdbcType="CLOB"/>
		<result column="fileNo" property="fileNo"/>
		<result column="filePath" property="filePath"/>
		<result column="fileStrgNm" property="fileStrgNm"/>
		<result column="fileOrgnlNm" property="fileOrgnlNm"/>
		<result column="fileSz" property="fileSz"/>
		<result column="fileFancySize" property="fileFancySize"/>
		<result column="fileCtrDt" property="fileCtrDt"/>
		<result column="fileType" property="fileType"/>
	</resultMap>
	
	<resultMap id="emplListMap" type="java.util.Map">
    	<result column="EMPL_NM" property="emplNm"/>
    	<result column="EMPL_ID" property="emplId"/>
    	<result column="PROFL_IMAGE_COURS" property="proflImageCours" javaType="java.lang.String" jdbcType="CLOB"/>
    	<result column="DEPT_CD" property="deptCd"/>
    	<result column="DEPT_NM" property="deptNm"/>
    	<result column="existRoomNo" property="existRoomNo"/>
	</resultMap>
	
	<!-- 채팅방 조회 -->
	<select id="selectChatRoomList" parameterType="string" resultType="map">
		SELECT 
		    cr.CHTT_ROOM_NO AS "chatRoomNo", 
		    cr.CHTT_ROOM_NM AS "chatRoomNm", 
		    cr.CHTT_ROOM_CRT_DT AS "chatRoomCrtDate",
		    COALESCE(unread.unreadMsgCount, 0) AS "unreadMsgCount",
		    recent.CHTT_MSG_NO AS "recentMsgNo",
		    CASE 
		        WHEN recent.CHTT_MSG_TY = 'MSG_01' THEN recent.CHTT_CN
		        WHEN recent.CHTT_MSG_TY = 'MSG_02' THEN '이미지'
		        WHEN recent.CHTT_MSG_TY = 'MSG_03' THEN '첨부파일'
		        ELSE NULL
		    END AS "recentMsgContent",
		    recent.CHTT_WRT_DT AS "recentMsgDate",
		    COUNT(DISTINCT crj_all.EMPL_ID) AS "totalMembers"
		FROM 
		    CHAT_ROOM cr
		JOIN 
		    CHAT_ROOM_JOIN crj ON cr.CHTT_ROOM_NO = crj.CHTT_ROOM_NO
		LEFT JOIN 
		    (SELECT 
		         cm.CHTT_ROOM_NO,
		         COUNT(cm.CHTT_MSG_NO) AS unreadMsgCount
		     FROM 
		         CHAT_MESSAGE cm
		     JOIN 
		         CHAT_ROOM_JOIN crj ON cm.CHTT_ROOM_NO = crj.CHTT_ROOM_NO
		     WHERE 
		         cm.CHTT_MSG_NO > crj.LAST_CHTT_ID
		         AND crj.EMPL_ID = #{emplId}
		     GROUP BY 
		         cm.CHTT_ROOM_NO
		    ) unread ON cr.CHTT_ROOM_NO = unread.CHTT_ROOM_NO
		LEFT JOIN 
		    (SELECT 
		         cm.CHTT_ROOM_NO,
		         cm.CHTT_MSG_NO,
		         cm.CHTT_MSG_TY,
		         cm.CHTT_CN,
		         cm.CHTT_WRT_DT,
		         ROW_NUMBER() OVER (PARTITION BY cm.CHTT_ROOM_NO ORDER BY cm.CHTT_WRT_DT DESC) AS rn
		     FROM 
		         CHAT_MESSAGE cm
		    ) recent ON cr.CHTT_ROOM_NO = recent.CHTT_ROOM_NO AND recent.rn = 1
		LEFT JOIN 
		    CHAT_ROOM_JOIN crj_all ON cr.CHTT_ROOM_NO = crj_all.CHTT_ROOM_NO
		WHERE 
		    crj.EMPL_ID = #{emplId}
		GROUP BY 
		    cr.CHTT_ROOM_NO, 
		    cr.CHTT_ROOM_NM, 
		    cr.CHTT_ROOM_CRT_DT, 
		    recent.CHTT_MSG_NO, 
		    recent.CHTT_MSG_TY, 
		    recent.CHTT_CN, 
		    recent.CHTT_WRT_DT, 
		    unread.unreadMsgCount
		ORDER BY
		    recent.CHTT_WRT_DT DESC

	</select>


	<!-- 채팅방 메시지 조회 -->
	<select id="selectChatByRoomNo" parameterType="map" resultMap="customChatMsgMap">
		SELECT 
		    cm.CHTT_MSG_NO AS "chatMsgNo",
		    cm.CHTT_ROOM_NO AS "chatRoomNo",
		    cm.EMPL_ID AS "emplId",
		    e.EMPL_NM AS "emplName",
		    e.PROFL_IMAGE_COURS AS "emplProfileImg",
		    cm.CHTT_MSG_TY AS "chatMsgType",
		    cm.CHTT_CN AS "chatContent",
		    cm.CHTT_WRT_DT AS "chatWriteDate",
		    cm.FILE_GROUP_NO AS "fileGroupNo",
		    cm.IMAGE_FILE AS "imgFile",
		    af.FILE_NO AS "fileNo",
		    af.FILE_PATH AS "filePath",
		    af.FILE_STRG_NM AS "fileStrgNm",
		    af.FILE_ORGNL_NM AS "fileOrgnlNm",
		    af.FILE_SZ AS "fileSz",
		    af.FILE_FANCYSIZE AS "fileFancySize",
		    af.FILE_CTR_DT AS "fileCtrDt",
		    af.FILE_TYPE AS "fileType"
		FROM 
		    CHAT_MESSAGE cm
		JOIN 
		    CHAT_ROOM_JOIN crj ON cm.CHTT_ROOM_NO = crj.CHTT_ROOM_NO
		JOIN 
		    EMPLOYEE e ON cm.EMPL_ID = e.EMPL_ID
		LEFT JOIN 
		    ATCH_FILE af ON cm.FILE_GROUP_NO = af.FILE_GROUP_NO
		WHERE 
		    crj.EMPL_ID = #{emplId}
		    AND cm.CHTT_ROOM_NO = #{chatRoomNo}
		ORDER BY 
		    cm.CHTT_WRT_DT ASC, af.FILE_NO ASC
				
	</select>
	
	
	<!-- 파일 삽입 -->
    <insert id="insertChatFile" parameterType="customChatMsgVO" useGeneratedKeys="true">
    	<selectKey keyProperty="fileGroupNo" resultType="int" order="BEFORE">
			select SEQ_FILE_GROUP_NO.NEXTVAL from dual
		</selectKey>
        INSERT INTO ATCH_FILE (
            FILE_GROUP_NO,
            FILE_NO,
            FILE_PATH,
            FILE_STRG_NM,
            FILE_ORGNL_NM,
            FILE_SZ,
            FILE_FANCYSIZE,
            FILE_CTR_DT,
            FILE_TYPE
        ) VALUES (
            #{fileGroupNo},
            1,
            #{filePath},
            #{fileStrgNm},
            #{fileOrgnlNm},
            #{fileSz},
            #{fileFancySize},
            #{fileCtrDt},
            #{fileType}
        )
    </insert>


    <!-- 채팅 메시지 삽입 -->
    <insert id="insertChatMessage" parameterType="customChatMsgVO" useGeneratedKeys="true">
    	<selectKey keyProperty="chatMsgNo" resultType="int" order="BEFORE">
			select max(CHTT_MSG_NO) + 1 from CHAT_MESSAGE
		</selectKey>
    	INSERT INTO CHAT_MESSAGE (
	    	CHTT_MSG_NO
	    	, CHTT_ROOM_NO
	    	, EMPL_ID
	    	, CHTT_MSG_TY
	    	, CHTT_WRT_DT
	    	<choose>
	            <when test="chatMsgType == 'MSG_01'">
	                , CHTT_CN
	            </when>
	            <when test="chatMsgType == 'MSG_02'">
	                , IMAGE_FILE
	            </when>
	            <when test="chatMsgType == 'MSG_03'">
	                , FILE_GROUP_NO
	            </when>
	        </choose>
    	) VALUES (
    		#{chatMsgNo}
	    	, #{chatRoomNo}
	    	, #{emplId}
			, #{chatMsgType}
	    	, sysdate
	    	<choose>
	            <when test="chatMsgType == 'MSG_01'">
	                , #{chatContent}
	            </when>
	            <when test="chatMsgType == 'MSG_02'">
	                , #{imgFile}
	            </when>
	            <when test="chatMsgType == 'MSG_03'">
	                , #{fileGroupNo}
	            </when>
	        </choose>
    	)
    	
    </insert>
    
    
    <!-- 최근 읽은 채팅 업데이트 -->
    <update id="updateLastReadedMessage" parameterType="customChatMsgVO">
    	UPDATE CHAT_ROOM_JOIN
		SET LAST_CHTT_ID = #{chatMsgNo}
		WHERE 
			CHTT_ROOM_NO = #{chatRoomNo}
			AND EMPL_ID = #{emplId}
    </update>
    
    
    <!-- 채팅페이지 사원 주소록 조회 -->
    <select id="selectEmplListOnChat" resultMap="emplListMap" parameterType="string">
		SELECT 
		    e.EMPL_NM,
		    e.EMPL_ID,
		    e.PROFL_IMAGE_COURS,
		    d.DEPT_CD,
		    d.DEPT_NM,
		    (
		        SELECT crj1.CHTT_ROOM_NO
		        FROM CHAT_ROOM_JOIN crj1
		        JOIN CHAT_ROOM_JOIN crj2 ON crj1.CHTT_ROOM_NO = crj2.CHTT_ROOM_NO
		        WHERE crj1.EMPL_ID = #{emplId}
		          AND crj2.EMPL_ID = e.EMPL_ID
		          <![CDATA[ AND crj1.EMPL_ID <> crj2.EMPL_ID ]]>
		          AND crj1.CHTT_ROOM_NO IN (
		              SELECT crj3.CHTT_ROOM_NO
		              FROM CHAT_ROOM_JOIN crj3
		              GROUP BY crj3.CHTT_ROOM_NO
		              HAVING COUNT(DISTINCT crj3.EMPL_ID) = 2
		          )
		    ) AS existRoomNo
		FROM 
		    EMPLOYEE e
		JOIN 
		    DEPARTMENT d ON e.DEPT_CD = d.DEPT_CD
		WHERE 
		    <![CDATA[ e.EMPL_ID <> #{emplId} ]]>
		    AND e.RSGNTN_YMD IS NULL
		ORDER BY 
		    e.EMPL_NM
    </select>
    
    
    <!-- 채팅방 생성 -->
	<insert id="createChatRoom" parameterType="chatRoomVO" useGeneratedKeys="true">
		<selectKey keyProperty="chatRoomNo" resultType="int" order="BEFORE" >
			select max(CHTT_ROOM_NO) + 1 as chat_Room_No from CHAT_ROOM
		</selectKey>
		INSERT INTO CHAT_ROOM ( CHTT_ROOM_NO, CHTT_ROOM_NM, CHTT_ROOM_CRT_DT ) 
		VALUES (#{chatRoomNo}, #{chatRoomNm}, sysdate)
	</insert>


	<!-- 채팅방 사원 추가 -->
	<insert id="insertChatMember" parameterType="map">
		INSERT INTO CHAT_ROOM_JOIN ( CHTT_ROOM_NO, EMPL_ID ) 
		VALUES ( #{chatRoomNo}, #{emplId} )
	</insert>
	
	<!-- 채팅방에 속하지 않는 사원 조회 -->
	<select id="selectEmplNotInChatroom" parameterType="String" resultMap="emplListMap">
		SELECT 
		    e.EMPL_NM,
		    e.EMPL_ID,
		    e.PROFL_IMAGE_COURS,
		    d.DEPT_CD,
		    d.DEPT_NM
		FROM 
		    EMPLOYEE e
		JOIN 
		    DEPARTMENT d ON e.DEPT_CD = d.DEPT_CD
		WHERE 
		    e.EMPL_ID NOT IN (
		        SELECT crj.EMPL_ID
		        FROM CHAT_ROOM_JOIN crj
		        WHERE crj.CHTT_ROOM_NO = #{chatRoomNo}
		    )
		    AND e.RSGNTN_YMD IS NULL
		ORDER BY 
		    e.EMPL_NM
	</select>
	
	<!-- 채팅방 인원 검색 -->
	<select id="selectEmplInChat" parameterType="string" resultType="map">
		SELECT 
		    cr.CHTT_ROOM_NO AS chatRoomNo,
		    cr.CHTT_ROOM_NM AS chatRoomNm,
		    e.EMPL_ID AS emplId,
		    e.EMPL_NM AS emplNm
		FROM 
		    CHAT_ROOM cr
		JOIN 
		    CHAT_ROOM_JOIN crj ON cr.CHTT_ROOM_NO = crj.CHTT_ROOM_NO
		JOIN 
		    EMPLOYEE e ON crj.EMPL_ID = e.EMPL_ID
		WHERE 
		    cr.CHTT_ROOM_NO = #{chatRoomNo}
	</select>
	
	<!-- 최근 읽은 메세지 업데이트 -->
	<update id="updateRecentMessage" parameterType="map">
		UPDATE CHAT_ROOM_JOIN crj
		SET crj.LAST_CHTT_ID = (
		    SELECT MAX(cm.CHTT_MSG_NO)
		    FROM CHAT_MESSAGE cm
		    WHERE cm.CHTT_ROOM_NO = crj.CHTT_ROOM_NO
		)
		WHERE crj.EMPL_ID = #{emplId}
		  AND crj.CHTT_ROOM_NO = #{chatRoomNo}
	</update>

</mapper>